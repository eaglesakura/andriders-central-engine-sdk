// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityProtocol.proto

package com.eaglesakura.andriders.protocol;

public final class ActivityProtocol {
  private ActivityProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code eaglesakura_ace.ActivityType}
   *
   * <pre>
   * 活動の種類
   * </pre>
   */
  public enum ActivityType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MaxSpeedUpdate = 0;</code>
     *
     * <pre>
     * 最高速度の更新
     * </pre>
     */
    MaxSpeedUpdate(0, 0),
    ;

    /**
     * <code>MaxSpeedUpdate = 0;</code>
     *
     * <pre>
     * 最高速度の更新
     * </pre>
     */
    public static final int MaxSpeedUpdate_VALUE = 0;


    public final int getNumber() { return value; }

    public static ActivityType valueOf(int value) {
      switch (value) {
        case 0: return MaxSpeedUpdate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActivityType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActivityType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActivityType>() {
            public ActivityType findValueByNumber(int number) {
              return ActivityType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.ActivityProtocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final ActivityType[] VALUES = values();

    public static ActivityType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ActivityType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eaglesakura_ace.ActivityType)
  }

  public interface MaxSpeedActivityOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required float newRecord = 1;
    /**
     * <code>required float newRecord = 1;</code>
     *
     * <pre>
     * 新記録
     * </pre>
     */
    boolean hasNewRecord();
    /**
     * <code>required float newRecord = 1;</code>
     *
     * <pre>
     * 新記録
     * </pre>
     */
    float getNewRecord();

    // required string newRecordTime = 5;
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    boolean hasNewRecordTime();
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    java.lang.String getNewRecordTime();
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    com.google.protobuf.ByteString
        getNewRecordTimeBytes();

    // required float oldRecord = 2;
    /**
     * <code>required float oldRecord = 2;</code>
     *
     * <pre>
     * 旧記録
     * </pre>
     */
    boolean hasOldRecord();
    /**
     * <code>required float oldRecord = 2;</code>
     *
     * <pre>
     * 旧記録
     * </pre>
     */
    float getOldRecord();

    // optional int32 recordCadenceRpm = 3;
    /**
     * <code>optional int32 recordCadenceRpm = 3;</code>
     *
     * <pre>
     * 記録更新時のケイデンス
     * </pre>
     */
    boolean hasRecordCadenceRpm();
    /**
     * <code>optional int32 recordCadenceRpm = 3;</code>
     *
     * <pre>
     * 記録更新時のケイデンス
     * </pre>
     */
    int getRecordCadenceRpm();

    // optional int32 recordHeartrateBpm = 4;
    /**
     * <code>optional int32 recordHeartrateBpm = 4;</code>
     *
     * <pre>
     * 記録更新時の心拍
     * </pre>
     */
    boolean hasRecordHeartrateBpm();
    /**
     * <code>optional int32 recordHeartrateBpm = 4;</code>
     *
     * <pre>
     * 記録更新時の心拍
     * </pre>
     */
    int getRecordHeartrateBpm();

    // required .eaglesakura_ace.MaxSpeedActivity.State state = 10;
    /**
     * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
     *
     * <pre>
     * 現在のステート
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
     *
     * <pre>
     * 現在のステート
     * </pre>
     */
    com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State getState();
  }
  /**
   * Protobuf type {@code eaglesakura_ace.MaxSpeedActivity}
   *
   * <pre>
   * 最高速度の更新チェック
   * </pre>
   */
  public static final class MaxSpeedActivity extends
      com.google.protobuf.GeneratedMessage
      implements MaxSpeedActivityOrBuilder {
    // Use MaxSpeedActivity.newBuilder() to construct.
    private MaxSpeedActivity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaxSpeedActivity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaxSpeedActivity defaultInstance;
    public static MaxSpeedActivity getDefaultInstance() {
      return defaultInstance;
    }

    public MaxSpeedActivity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaxSpeedActivity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              newRecord_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000004;
              oldRecord_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              recordCadenceRpm_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              recordHeartrateBpm_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000002;
              newRecordTime_ = input.readBytes();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State value = com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                state_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_MaxSpeedActivity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.class, com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.Builder.class);
    }

    public static com.google.protobuf.Parser<MaxSpeedActivity> PARSER =
        new com.google.protobuf.AbstractParser<MaxSpeedActivity>() {
      public MaxSpeedActivity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaxSpeedActivity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaxSpeedActivity> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code eaglesakura_ace.MaxSpeedActivity.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Arrival = 1;</code>
       *
       * <pre>
       * 最高速の更新を開始した
       * </pre>
       */
      Arrival(0, 1),
      /**
       * <code>NewRecord = 2;</code>
       *
       * <pre>
       * 最高速を塗り替えた
       * これは新記録に到達する度に送られる
       * </pre>
       */
      NewRecord(1, 2),
      /**
       * <code>Finished = 3;</code>
       *
       * <pre>
       * 最高速挑戦が終了した
       * これは速度が旧記録を下回り、挑戦が終わったタイミングで呼び出される。
       * </pre>
       */
      Finished(2, 3),
      ;

      /**
       * <code>Arrival = 1;</code>
       *
       * <pre>
       * 最高速の更新を開始した
       * </pre>
       */
      public static final int Arrival_VALUE = 1;
      /**
       * <code>NewRecord = 2;</code>
       *
       * <pre>
       * 最高速を塗り替えた
       * これは新記録に到達する度に送られる
       * </pre>
       */
      public static final int NewRecord_VALUE = 2;
      /**
       * <code>Finished = 3;</code>
       *
       * <pre>
       * 最高速挑戦が終了した
       * これは速度が旧記録を下回り、挑戦が終わったタイミングで呼び出される。
       * </pre>
       */
      public static final int Finished_VALUE = 3;


      public final int getNumber() { return value; }

      public static State valueOf(int value) {
        switch (value) {
          case 1: return Arrival;
          case 2: return NewRecord;
          case 3: return Finished;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<State>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private State(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:eaglesakura_ace.MaxSpeedActivity.State)
    }

    private int bitField0_;
    // required float newRecord = 1;
    public static final int NEWRECORD_FIELD_NUMBER = 1;
    private float newRecord_;
    /**
     * <code>required float newRecord = 1;</code>
     *
     * <pre>
     * 新記録
     * </pre>
     */
    public boolean hasNewRecord() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float newRecord = 1;</code>
     *
     * <pre>
     * 新記録
     * </pre>
     */
    public float getNewRecord() {
      return newRecord_;
    }

    // required string newRecordTime = 5;
    public static final int NEWRECORDTIME_FIELD_NUMBER = 5;
    private java.lang.Object newRecordTime_;
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    public boolean hasNewRecordTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    public java.lang.String getNewRecordTime() {
      java.lang.Object ref = newRecordTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          newRecordTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string newRecordTime = 5;</code>
     *
     * <pre>
     * 記録時刻
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNewRecordTimeBytes() {
      java.lang.Object ref = newRecordTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        newRecordTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required float oldRecord = 2;
    public static final int OLDRECORD_FIELD_NUMBER = 2;
    private float oldRecord_;
    /**
     * <code>required float oldRecord = 2;</code>
     *
     * <pre>
     * 旧記録
     * </pre>
     */
    public boolean hasOldRecord() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float oldRecord = 2;</code>
     *
     * <pre>
     * 旧記録
     * </pre>
     */
    public float getOldRecord() {
      return oldRecord_;
    }

    // optional int32 recordCadenceRpm = 3;
    public static final int RECORDCADENCERPM_FIELD_NUMBER = 3;
    private int recordCadenceRpm_;
    /**
     * <code>optional int32 recordCadenceRpm = 3;</code>
     *
     * <pre>
     * 記録更新時のケイデンス
     * </pre>
     */
    public boolean hasRecordCadenceRpm() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 recordCadenceRpm = 3;</code>
     *
     * <pre>
     * 記録更新時のケイデンス
     * </pre>
     */
    public int getRecordCadenceRpm() {
      return recordCadenceRpm_;
    }

    // optional int32 recordHeartrateBpm = 4;
    public static final int RECORDHEARTRATEBPM_FIELD_NUMBER = 4;
    private int recordHeartrateBpm_;
    /**
     * <code>optional int32 recordHeartrateBpm = 4;</code>
     *
     * <pre>
     * 記録更新時の心拍
     * </pre>
     */
    public boolean hasRecordHeartrateBpm() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 recordHeartrateBpm = 4;</code>
     *
     * <pre>
     * 記録更新時の心拍
     * </pre>
     */
    public int getRecordHeartrateBpm() {
      return recordHeartrateBpm_;
    }

    // required .eaglesakura_ace.MaxSpeedActivity.State state = 10;
    public static final int STATE_FIELD_NUMBER = 10;
    private com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State state_;
    /**
     * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
     *
     * <pre>
     * 現在のステート
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
     *
     * <pre>
     * 現在のステート
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State getState() {
      return state_;
    }

    private void initFields() {
      newRecord_ = 0F;
      newRecordTime_ = "";
      oldRecord_ = 0F;
      recordCadenceRpm_ = 0;
      recordHeartrateBpm_ = 0;
      state_ = com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State.Arrival;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNewRecord()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewRecordTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOldRecord()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, newRecord_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(2, oldRecord_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(3, recordCadenceRpm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(4, recordHeartrateBpm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(5, getNewRecordTimeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(10, state_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, newRecord_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, oldRecord_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, recordCadenceRpm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, recordHeartrateBpm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getNewRecordTimeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, state_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.MaxSpeedActivity}
     *
     * <pre>
     * 最高速度の更新チェック
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_MaxSpeedActivity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.class, com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        newRecord_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        newRecordTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        oldRecord_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        recordCadenceRpm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        recordHeartrateBpm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State.Arrival;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor;
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity build() {
        com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity buildPartial() {
        com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity result = new com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.newRecord_ = newRecord_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.newRecordTime_ = newRecordTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oldRecord_ = oldRecord_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.recordCadenceRpm_ = recordCadenceRpm_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.recordHeartrateBpm_ = recordHeartrateBpm_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity) {
          return mergeFrom((com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity other) {
        if (other == com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.getDefaultInstance()) return this;
        if (other.hasNewRecord()) {
          setNewRecord(other.getNewRecord());
        }
        if (other.hasNewRecordTime()) {
          bitField0_ |= 0x00000002;
          newRecordTime_ = other.newRecordTime_;
          onChanged();
        }
        if (other.hasOldRecord()) {
          setOldRecord(other.getOldRecord());
        }
        if (other.hasRecordCadenceRpm()) {
          setRecordCadenceRpm(other.getRecordCadenceRpm());
        }
        if (other.hasRecordHeartrateBpm()) {
          setRecordHeartrateBpm(other.getRecordHeartrateBpm());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNewRecord()) {
          
          return false;
        }
        if (!hasNewRecordTime()) {
          
          return false;
        }
        if (!hasOldRecord()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required float newRecord = 1;
      private float newRecord_ ;
      /**
       * <code>required float newRecord = 1;</code>
       *
       * <pre>
       * 新記録
       * </pre>
       */
      public boolean hasNewRecord() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float newRecord = 1;</code>
       *
       * <pre>
       * 新記録
       * </pre>
       */
      public float getNewRecord() {
        return newRecord_;
      }
      /**
       * <code>required float newRecord = 1;</code>
       *
       * <pre>
       * 新記録
       * </pre>
       */
      public Builder setNewRecord(float value) {
        bitField0_ |= 0x00000001;
        newRecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float newRecord = 1;</code>
       *
       * <pre>
       * 新記録
       * </pre>
       */
      public Builder clearNewRecord() {
        bitField0_ = (bitField0_ & ~0x00000001);
        newRecord_ = 0F;
        onChanged();
        return this;
      }

      // required string newRecordTime = 5;
      private java.lang.Object newRecordTime_ = "";
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public boolean hasNewRecordTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public java.lang.String getNewRecordTime() {
        java.lang.Object ref = newRecordTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          newRecordTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNewRecordTimeBytes() {
        java.lang.Object ref = newRecordTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          newRecordTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public Builder setNewRecordTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        newRecordTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public Builder clearNewRecordTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newRecordTime_ = getDefaultInstance().getNewRecordTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string newRecordTime = 5;</code>
       *
       * <pre>
       * 記録時刻
       * </pre>
       */
      public Builder setNewRecordTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        newRecordTime_ = value;
        onChanged();
        return this;
      }

      // required float oldRecord = 2;
      private float oldRecord_ ;
      /**
       * <code>required float oldRecord = 2;</code>
       *
       * <pre>
       * 旧記録
       * </pre>
       */
      public boolean hasOldRecord() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float oldRecord = 2;</code>
       *
       * <pre>
       * 旧記録
       * </pre>
       */
      public float getOldRecord() {
        return oldRecord_;
      }
      /**
       * <code>required float oldRecord = 2;</code>
       *
       * <pre>
       * 旧記録
       * </pre>
       */
      public Builder setOldRecord(float value) {
        bitField0_ |= 0x00000004;
        oldRecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float oldRecord = 2;</code>
       *
       * <pre>
       * 旧記録
       * </pre>
       */
      public Builder clearOldRecord() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oldRecord_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 recordCadenceRpm = 3;
      private int recordCadenceRpm_ ;
      /**
       * <code>optional int32 recordCadenceRpm = 3;</code>
       *
       * <pre>
       * 記録更新時のケイデンス
       * </pre>
       */
      public boolean hasRecordCadenceRpm() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 recordCadenceRpm = 3;</code>
       *
       * <pre>
       * 記録更新時のケイデンス
       * </pre>
       */
      public int getRecordCadenceRpm() {
        return recordCadenceRpm_;
      }
      /**
       * <code>optional int32 recordCadenceRpm = 3;</code>
       *
       * <pre>
       * 記録更新時のケイデンス
       * </pre>
       */
      public Builder setRecordCadenceRpm(int value) {
        bitField0_ |= 0x00000008;
        recordCadenceRpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recordCadenceRpm = 3;</code>
       *
       * <pre>
       * 記録更新時のケイデンス
       * </pre>
       */
      public Builder clearRecordCadenceRpm() {
        bitField0_ = (bitField0_ & ~0x00000008);
        recordCadenceRpm_ = 0;
        onChanged();
        return this;
      }

      // optional int32 recordHeartrateBpm = 4;
      private int recordHeartrateBpm_ ;
      /**
       * <code>optional int32 recordHeartrateBpm = 4;</code>
       *
       * <pre>
       * 記録更新時の心拍
       * </pre>
       */
      public boolean hasRecordHeartrateBpm() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 recordHeartrateBpm = 4;</code>
       *
       * <pre>
       * 記録更新時の心拍
       * </pre>
       */
      public int getRecordHeartrateBpm() {
        return recordHeartrateBpm_;
      }
      /**
       * <code>optional int32 recordHeartrateBpm = 4;</code>
       *
       * <pre>
       * 記録更新時の心拍
       * </pre>
       */
      public Builder setRecordHeartrateBpm(int value) {
        bitField0_ |= 0x00000010;
        recordHeartrateBpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recordHeartrateBpm = 4;</code>
       *
       * <pre>
       * 記録更新時の心拍
       * </pre>
       */
      public Builder clearRecordHeartrateBpm() {
        bitField0_ = (bitField0_ & ~0x00000010);
        recordHeartrateBpm_ = 0;
        onChanged();
        return this;
      }

      // required .eaglesakura_ace.MaxSpeedActivity.State state = 10;
      private com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State state_ = com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State.Arrival;
      /**
       * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
       *
       * <pre>
       * 現在のステート
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
       *
       * <pre>
       * 現在のステート
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State getState() {
        return state_;
      }
      /**
       * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
       *
       * <pre>
       * 現在のステート
       * </pre>
       */
      public Builder setState(com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.MaxSpeedActivity.State state = 10;</code>
       *
       * <pre>
       * 現在のステート
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        state_ = com.eaglesakura.andriders.protocol.ActivityProtocol.MaxSpeedActivity.State.Arrival;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.MaxSpeedActivity)
    }

    static {
      defaultInstance = new MaxSpeedActivity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.MaxSpeedActivity)
  }

  public interface ActivityPayloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .eaglesakura_ace.ActivityType type = 1;
    /**
     * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
     *
     * <pre>
     * 活動の種類
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
     *
     * <pre>
     * 活動の種類
     * </pre>
     */
    com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType getType();

    // required bytes buffer = 10;
    /**
     * <code>required bytes buffer = 10;</code>
     *
     * <pre>
     * 活動データ
     * </pre>
     */
    boolean hasBuffer();
    /**
     * <code>required bytes buffer = 10;</code>
     *
     * <pre>
     * 活動データ
     * </pre>
     */
    com.google.protobuf.ByteString getBuffer();
  }
  /**
   * Protobuf type {@code eaglesakura_ace.ActivityPayload}
   *
   * <pre>
   * 活動データ
   * </pre>
   */
  public static final class ActivityPayload extends
      com.google.protobuf.GeneratedMessage
      implements ActivityPayloadOrBuilder {
    // Use ActivityPayload.newBuilder() to construct.
    private ActivityPayload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActivityPayload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActivityPayload defaultInstance;
    public static ActivityPayload getDefaultInstance() {
      return defaultInstance;
    }

    public ActivityPayload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActivityPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType value = com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 82: {
              bitField0_ |= 0x00000002;
              buffer_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_ActivityPayload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_ActivityPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.class, com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.Builder.class);
    }

    public static com.google.protobuf.Parser<ActivityPayload> PARSER =
        new com.google.protobuf.AbstractParser<ActivityPayload>() {
      public ActivityPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActivityPayload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActivityPayload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .eaglesakura_ace.ActivityType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType type_;
    /**
     * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
     *
     * <pre>
     * 活動の種類
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
     *
     * <pre>
     * 活動の種類
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType getType() {
      return type_;
    }

    // required bytes buffer = 10;
    public static final int BUFFER_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString buffer_;
    /**
     * <code>required bytes buffer = 10;</code>
     *
     * <pre>
     * 活動データ
     * </pre>
     */
    public boolean hasBuffer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes buffer = 10;</code>
     *
     * <pre>
     * 活動データ
     * </pre>
     */
    public com.google.protobuf.ByteString getBuffer() {
      return buffer_;
    }

    private void initFields() {
      type_ = com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType.MaxSpeedUpdate;
      buffer_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuffer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(10, buffer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, buffer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.ActivityPayload}
     *
     * <pre>
     * 活動データ
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_ActivityPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_ActivityPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.class, com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType.MaxSpeedUpdate;
        bitField0_ = (bitField0_ & ~0x00000001);
        buffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.internal_static_eaglesakura_ace_ActivityPayload_descriptor;
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload build() {
        com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload buildPartial() {
        com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload result = new com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.buffer_ = buffer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload) {
          return mergeFrom((com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload other) {
        if (other == com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBuffer()) {
          setBuffer(other.getBuffer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasBuffer()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityPayload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .eaglesakura_ace.ActivityType type = 1;
      private com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType type_ = com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType.MaxSpeedUpdate;
      /**
       * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
       *
       * <pre>
       * 活動の種類
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
       *
       * <pre>
       * 活動の種類
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType getType() {
        return type_;
      }
      /**
       * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
       *
       * <pre>
       * 活動の種類
       * </pre>
       */
      public Builder setType(com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.ActivityType type = 1;</code>
       *
       * <pre>
       * 活動の種類
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.eaglesakura.andriders.protocol.ActivityProtocol.ActivityType.MaxSpeedUpdate;
        onChanged();
        return this;
      }

      // required bytes buffer = 10;
      private com.google.protobuf.ByteString buffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes buffer = 10;</code>
       *
       * <pre>
       * 活動データ
       * </pre>
       */
      public boolean hasBuffer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes buffer = 10;</code>
       *
       * <pre>
       * 活動データ
       * </pre>
       */
      public com.google.protobuf.ByteString getBuffer() {
        return buffer_;
      }
      /**
       * <code>required bytes buffer = 10;</code>
       *
       * <pre>
       * 活動データ
       * </pre>
       */
      public Builder setBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        buffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes buffer = 10;</code>
       *
       * <pre>
       * 活動データ
       * </pre>
       */
      public Builder clearBuffer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        buffer_ = getDefaultInstance().getBuffer();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.ActivityPayload)
    }

    static {
      defaultInstance = new ActivityPayload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.ActivityPayload)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_MaxSpeedActivity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_ActivityPayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_ActivityPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026ActivityProtocol.proto\022\017eaglesakura_ac" +
      "e\032\023AcesConstants.proto\"\360\001\n\020MaxSpeedActiv" +
      "ity\022\021\n\tnewRecord\030\001 \002(\002\022\025\n\rnewRecordTime\030" +
      "\005 \002(\t\022\021\n\toldRecord\030\002 \002(\002\022\030\n\020recordCadenc" +
      "eRpm\030\003 \001(\005\022\032\n\022recordHeartrateBpm\030\004 \001(\005\0226" +
      "\n\005state\030\n \002(\0162\'.eaglesakura_ace.MaxSpeed" +
      "Activity.State\"1\n\005State\022\013\n\007Arrival\020\001\022\r\n\t" +
      "NewRecord\020\002\022\014\n\010Finished\020\003\"N\n\017ActivityPay" +
      "load\022+\n\004type\030\001 \002(\0162\035.eaglesakura_ace.Act" +
      "ivityType\022\016\n\006buffer\030\n \002(\014*\"\n\014ActivityTyp",
      "e\022\022\n\016MaxSpeedUpdate\020\000B$\n\"com.eaglesakura" +
      ".andriders.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_eaglesakura_ace_MaxSpeedActivity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_MaxSpeedActivity_descriptor,
              new java.lang.String[] { "NewRecord", "NewRecordTime", "OldRecord", "RecordCadenceRpm", "RecordHeartrateBpm", "State", });
          internal_static_eaglesakura_ace_ActivityPayload_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_eaglesakura_ace_ActivityPayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_ActivityPayload_descriptor,
              new java.lang.String[] { "Type", "Buffer", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.eaglesakura.andriders.protocol.AcesConstants.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
