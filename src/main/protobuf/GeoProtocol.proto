package eaglesakura_ace;

import "AcesConstants.proto";

option java_package = "com.eaglesakura.andriders.protocol";

/**
 * GPS座標を示す。
 */
message GeoPoint {
    // 北緯
    required double latitude = 1;
    // 東経
    required double longitude = 2;
    // 高度
    required double altitude = 3;
}

// 坂の種類
enum InclinationType {
    // 平坦
    None = 0;
    // 坂道
    Hill = 1;
    // 激坂
    IntenseHill = 2;
}

// 現在位置の情報伝達
message GeoPayload {
    // 現在のGPS座標
    required GeoPoint location = 1;

    // 位置精度（メートル単位）
    optional float locationAccuracy = 7;

    // ユーザーがこの精度を信頼すると認めている
    optional bool locationReliance = 8;

    // 打刻した時刻
    required int64 date = 9;

    // 勾配(%単位、下り坂の場合は負の値)
    optional float inclinationPercent = 4;
    // 勾配の種類
    optional InclinationType inclinationType = 5;
}

/**
 * 地理情報
 */
message GeographyPayload {
    // この情報を取得した時のGPS座標
    required GeoPoint location = 1;
    // この情報を取得した時の時刻
    required string date = 2;

    // 日の出時刻
    optional int64 sunriseDate = 14;
    // 日の入り時刻
    optional int64 sunsetDate = 15;
    // 気温（摂氏）
    optional float temp = 12;
    // 風速（メートル）
    optional float windSpeedMeter = 13;

    // 近所のスポット数
    message Place {
        // スポットがある位置
        required GeoPoint location = 1;
        // スポット名
        required string name = 2;
    }

    message PlacesInfo {
        // 最短距離にあるスポット
        optional Place nearPlace = 1;
        // 近距離にあるスポット数
        required int32 nearNum = 2;
        // 遠距離にあるスポット数
        required int32 farNum = 3;
    }
    optional PlacesInfo placeRestStore = 50; // 補給が行える店舗数
    optional PlacesInfo placeRest = 51; // トイレがあるであろう場所の数
    optional PlacesInfo placeCycleStore = 52; // 自転車屋
    //    optional float placeFindRadiusMeter = 53; // 検索範囲（メートル）
}
