package eaglesakura_ace;

import "AcesConstants.proto";

import "ActivityProtocol.proto";

import "SensorProtocol.proto";

import "CommandProtocol.proto";

import "GeoProtocol.proto";

option java_package = "com.eaglesakura.andriders.protocol";

// セントラルサービスのバージョン
message CentralSpec {
    // データフォーマットバージョン
    // 互換性の無いバージョンになったらCentralを更新する必要がある
    required int64 protocolVersion = 10;

    // 実行しているCentralのアプリバージョン名
    required string versionName = 11;

    // 実行しているCentralのパッケージ名
    required string packageName = 12;
}


// セントラルの情報を載せる
// Serviceを起動している限り、常に付与して送付される
message CentralStatus {
    // Serviceを起動する毎に付与されるセッションID
    required string sessionId = 5;

    // ハートレートモニターに接続されていたらtrue
    required bool connectedHeartrate = 1;

    // ケイデンスセンサーに接続されていたらtrue
    required bool connectedCadence = 2;

    // スピードセンサーに接続されていたらtrue
    // 基本的にはS&Cセンサーを使用するが、GPS由来をオプションに追加するかもしれない
    required bool connectedSpeed = 3;

    // GPSがONになっていたらtrue
    required bool connectedGps = 6;

    // デバッグ機能がONの場合、trueが指定される
    required bool   debug = 7;
}


// Key-Valueの軽量なメタ情報
// optionalなデータを付与したい場合に利用する
message Meta {
    required string key = 1;
    required string value = 2;
}

// データ経路を限定することがないように、すべてのペイロードを一本化する
message MasterPayload {
    // セントラルの情報
    required CentralSpec   centralSpec = 20;

    // セントラルアプリのステータス
    required CentralStatus centralStatus = 1;

    // ペイロードごとに一意に確定するID
    // 送出ごとに異なる値が設定されるため、重複チェックに使用できる
    required string uniqueId = 4;

    // ペイロード作成日時 : Unix Time
    required int64 createdDateInt = 15;

    // 走行距離等の客観的な実働データ
    optional SessionStatus sessionStatus = 16;

    // ユーザーのフィットネスデータ
    optional FitnessStatus fitness = 14;

    // ユーザーの各種記録
    optional UserRecord userRecord = 10;

    // ユーザーのGPS座標ステータス
    optional GeoPayload geoStatus = 8;

    // 周辺情報
    optional GeographyPayload geography = 12;

    // センサーの値
    repeated SensorPayload sensorPayloads = 2;

    // 制御コマンド
    repeated CommandPayload commandPayloads = 5;

    // メタデータ
    repeated Meta metadatas = 13;
}
