// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoggerProtocol.proto

package com.eaglesakura.andriders.protocol;

public final class LoggerProtocol {
  private LoggerProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RawSessionPointPayloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .eaglesakura_ace.RawCadence cadence = 1;
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    boolean hasCadence();
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence getCadence();
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder getCadenceOrBuilder();

    // optional .eaglesakura_ace.RawHeartrate heartrate = 2;
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    boolean hasHeartrate();
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate getHeartrate();
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder getHeartrateOrBuilder();

    // optional .eaglesakura_ace.RawSpeed speed = 3;
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed getSpeed();
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder getSpeedOrBuilder();

    // optional .eaglesakura_ace.GeoPoint location = 4;
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint getLocation();
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder getLocationOrBuilder();

    // required string date = 100;
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    java.lang.String getDate();
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    // required int32 batteryLevel = 101;
    /**
     * <code>required int32 batteryLevel = 101;</code>
     *
     * <pre>
     * バッテリーの残量（％）
     * </pre>
     */
    boolean hasBatteryLevel();
    /**
     * <code>required int32 batteryLevel = 101;</code>
     *
     * <pre>
     * バッテリーの残量（％）
     * </pre>
     */
    int getBatteryLevel();

    // required bool batteryCharging = 102;
    /**
     * <code>required bool batteryCharging = 102;</code>
     *
     * <pre>
     * 充電中の場合true
     * </pre>
     */
    boolean hasBatteryCharging();
    /**
     * <code>required bool batteryCharging = 102;</code>
     *
     * <pre>
     * 充電中の場合true
     * </pre>
     */
    boolean getBatteryCharging();
  }
  /**
   * Protobuf type {@code eaglesakura_ace.RawSessionPointPayload}
   *
   * <pre>
   **
   * 継続的に取得する、ある特定瞬間のログを保持する
   * </pre>
   */
  public static final class RawSessionPointPayload extends
      com.google.protobuf.GeneratedMessage
      implements RawSessionPointPayloadOrBuilder {
    // Use RawSessionPointPayload.newBuilder() to construct.
    private RawSessionPointPayload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RawSessionPointPayload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RawSessionPointPayload defaultInstance;
    public static RawSessionPointPayload getDefaultInstance() {
      return defaultInstance;
    }

    public RawSessionPointPayload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RawSessionPointPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = cadence_.toBuilder();
              }
              cadence_ = input.readMessage(com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cadence_);
                cadence_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = heartrate_.toBuilder();
              }
              heartrate_ = input.readMessage(com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartrate_);
                heartrate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = speed_.toBuilder();
              }
              speed_ = input.readMessage(com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speed_);
                speed_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 802: {
              bitField0_ |= 0x00000010;
              date_ = input.readBytes();
              break;
            }
            case 808: {
              bitField0_ |= 0x00000020;
              batteryLevel_ = input.readInt32();
              break;
            }
            case 816: {
              bitField0_ |= 0x00000040;
              batteryCharging_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.LoggerProtocol.internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.LoggerProtocol.internal_static_eaglesakura_ace_RawSessionPointPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.class, com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.Builder.class);
    }

    public static com.google.protobuf.Parser<RawSessionPointPayload> PARSER =
        new com.google.protobuf.AbstractParser<RawSessionPointPayload>() {
      public RawSessionPointPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawSessionPointPayload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RawSessionPointPayload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .eaglesakura_ace.RawCadence cadence = 1;
    public static final int CADENCE_FIELD_NUMBER = 1;
    private com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence cadence_;
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    public boolean hasCadence() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence getCadence() {
      return cadence_;
    }
    /**
     * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
     *
     * <pre>
     * ケイデンス値
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder getCadenceOrBuilder() {
      return cadence_;
    }

    // optional .eaglesakura_ace.RawHeartrate heartrate = 2;
    public static final int HEARTRATE_FIELD_NUMBER = 2;
    private com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate heartrate_;
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    public boolean hasHeartrate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate getHeartrate() {
      return heartrate_;
    }
    /**
     * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
     *
     * <pre>
     * ハートレート
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder getHeartrateOrBuilder() {
      return heartrate_;
    }

    // optional .eaglesakura_ace.RawSpeed speed = 3;
    public static final int SPEED_FIELD_NUMBER = 3;
    private com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed speed_;
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed getSpeed() {
      return speed_;
    }
    /**
     * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder getSpeedOrBuilder() {
      return speed_;
    }

    // optional .eaglesakura_ace.GeoPoint location = 4;
    public static final int LOCATION_FIELD_NUMBER = 4;
    private com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint location_;
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint getLocation() {
      return location_;
    }
    /**
     * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
     *
     * <pre>
     * GPS座標
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // required string date = 100;
    public static final int DATE_FIELD_NUMBER = 100;
    private java.lang.Object date_;
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          date_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string date = 100;</code>
     *
     * <pre>
     * ログの打刻時間
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 batteryLevel = 101;
    public static final int BATTERYLEVEL_FIELD_NUMBER = 101;
    private int batteryLevel_;
    /**
     * <code>required int32 batteryLevel = 101;</code>
     *
     * <pre>
     * バッテリーの残量（％）
     * </pre>
     */
    public boolean hasBatteryLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 batteryLevel = 101;</code>
     *
     * <pre>
     * バッテリーの残量（％）
     * </pre>
     */
    public int getBatteryLevel() {
      return batteryLevel_;
    }

    // required bool batteryCharging = 102;
    public static final int BATTERYCHARGING_FIELD_NUMBER = 102;
    private boolean batteryCharging_;
    /**
     * <code>required bool batteryCharging = 102;</code>
     *
     * <pre>
     * 充電中の場合true
     * </pre>
     */
    public boolean hasBatteryCharging() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool batteryCharging = 102;</code>
     *
     * <pre>
     * 充電中の場合true
     * </pre>
     */
    public boolean getBatteryCharging() {
      return batteryCharging_;
    }

    private void initFields() {
      cadence_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.getDefaultInstance();
      heartrate_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.getDefaultInstance();
      speed_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.getDefaultInstance();
      location_ = com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.getDefaultInstance();
      date_ = "";
      batteryLevel_ = 0;
      batteryCharging_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatteryLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatteryCharging()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCadence()) {
        if (!getCadence().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHeartrate()) {
        if (!getHeartrate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpeed()) {
        if (!getSpeed().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLocation()) {
        if (!getLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, cadence_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, heartrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, speed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, location_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(100, getDateBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(101, batteryLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(102, batteryCharging_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cadence_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, heartrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, speed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, location_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(100, getDateBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(101, batteryLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(102, batteryCharging_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.RawSessionPointPayload}
     *
     * <pre>
     **
     * 継続的に取得する、ある特定瞬間のログを保持する
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.LoggerProtocol.internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.LoggerProtocol.internal_static_eaglesakura_ace_RawSessionPointPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.class, com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCadenceFieldBuilder();
          getHeartrateFieldBuilder();
          getSpeedFieldBuilder();
          getLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cadenceBuilder_ == null) {
          cadence_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.getDefaultInstance();
        } else {
          cadenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (heartrateBuilder_ == null) {
          heartrate_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.getDefaultInstance();
        } else {
          heartrateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (speedBuilder_ == null) {
          speed_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.getDefaultInstance();
        } else {
          speedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (locationBuilder_ == null) {
          location_ = com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        date_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        batteryLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        batteryCharging_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.LoggerProtocol.internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor;
      }

      public com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload build() {
        com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload buildPartial() {
        com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload result = new com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (cadenceBuilder_ == null) {
          result.cadence_ = cadence_;
        } else {
          result.cadence_ = cadenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (heartrateBuilder_ == null) {
          result.heartrate_ = heartrate_;
        } else {
          result.heartrate_ = heartrateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (speedBuilder_ == null) {
          result.speed_ = speed_;
        } else {
          result.speed_ = speedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.batteryLevel_ = batteryLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.batteryCharging_ = batteryCharging_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload) {
          return mergeFrom((com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload other) {
        if (other == com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload.getDefaultInstance()) return this;
        if (other.hasCadence()) {
          mergeCadence(other.getCadence());
        }
        if (other.hasHeartrate()) {
          mergeHeartrate(other.getHeartrate());
        }
        if (other.hasSpeed()) {
          mergeSpeed(other.getSpeed());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasDate()) {
          bitField0_ |= 0x00000010;
          date_ = other.date_;
          onChanged();
        }
        if (other.hasBatteryLevel()) {
          setBatteryLevel(other.getBatteryLevel());
        }
        if (other.hasBatteryCharging()) {
          setBatteryCharging(other.getBatteryCharging());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDate()) {
          
          return false;
        }
        if (!hasBatteryLevel()) {
          
          return false;
        }
        if (!hasBatteryCharging()) {
          
          return false;
        }
        if (hasCadence()) {
          if (!getCadence().isInitialized()) {
            
            return false;
          }
        }
        if (hasHeartrate()) {
          if (!getHeartrate().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpeed()) {
          if (!getSpeed().isInitialized()) {
            
            return false;
          }
        }
        if (hasLocation()) {
          if (!getLocation().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.LoggerProtocol.RawSessionPointPayload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .eaglesakura_ace.RawCadence cadence = 1;
      private com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence cadence_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder> cadenceBuilder_;
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public boolean hasCadence() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence getCadence() {
        if (cadenceBuilder_ == null) {
          return cadence_;
        } else {
          return cadenceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public Builder setCadence(com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence value) {
        if (cadenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cadence_ = value;
          onChanged();
        } else {
          cadenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public Builder setCadence(
          com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder builderForValue) {
        if (cadenceBuilder_ == null) {
          cadence_ = builderForValue.build();
          onChanged();
        } else {
          cadenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public Builder mergeCadence(com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence value) {
        if (cadenceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              cadence_ != com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.getDefaultInstance()) {
            cadence_ =
              com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.newBuilder(cadence_).mergeFrom(value).buildPartial();
          } else {
            cadence_ = value;
          }
          onChanged();
        } else {
          cadenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public Builder clearCadence() {
        if (cadenceBuilder_ == null) {
          cadence_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.getDefaultInstance();
          onChanged();
        } else {
          cadenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder getCadenceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCadenceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder getCadenceOrBuilder() {
        if (cadenceBuilder_ != null) {
          return cadenceBuilder_.getMessageOrBuilder();
        } else {
          return cadence_;
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawCadence cadence = 1;</code>
       *
       * <pre>
       * ケイデンス値
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder> 
          getCadenceFieldBuilder() {
        if (cadenceBuilder_ == null) {
          cadenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadence.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawCadenceOrBuilder>(
                  cadence_,
                  getParentForChildren(),
                  isClean());
          cadence_ = null;
        }
        return cadenceBuilder_;
      }

      // optional .eaglesakura_ace.RawHeartrate heartrate = 2;
      private com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate heartrate_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder> heartrateBuilder_;
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public boolean hasHeartrate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate getHeartrate() {
        if (heartrateBuilder_ == null) {
          return heartrate_;
        } else {
          return heartrateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public Builder setHeartrate(com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate value) {
        if (heartrateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartrate_ = value;
          onChanged();
        } else {
          heartrateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public Builder setHeartrate(
          com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder builderForValue) {
        if (heartrateBuilder_ == null) {
          heartrate_ = builderForValue.build();
          onChanged();
        } else {
          heartrateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public Builder mergeHeartrate(com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate value) {
        if (heartrateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              heartrate_ != com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.getDefaultInstance()) {
            heartrate_ =
              com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.newBuilder(heartrate_).mergeFrom(value).buildPartial();
          } else {
            heartrate_ = value;
          }
          onChanged();
        } else {
          heartrateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public Builder clearHeartrate() {
        if (heartrateBuilder_ == null) {
          heartrate_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.getDefaultInstance();
          onChanged();
        } else {
          heartrateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder getHeartrateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHeartrateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder getHeartrateOrBuilder() {
        if (heartrateBuilder_ != null) {
          return heartrateBuilder_.getMessageOrBuilder();
        } else {
          return heartrate_;
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawHeartrate heartrate = 2;</code>
       *
       * <pre>
       * ハートレート
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder> 
          getHeartrateFieldBuilder() {
        if (heartrateBuilder_ == null) {
          heartrateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrate.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawHeartrateOrBuilder>(
                  heartrate_,
                  getParentForChildren(),
                  isClean());
          heartrate_ = null;
        }
        return heartrateBuilder_;
      }

      // optional .eaglesakura_ace.RawSpeed speed = 3;
      private com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed speed_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder> speedBuilder_;
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed getSpeed() {
        if (speedBuilder_ == null) {
          return speed_;
        } else {
          return speedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder setSpeed(com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed value) {
        if (speedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speed_ = value;
          onChanged();
        } else {
          speedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder setSpeed(
          com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder builderForValue) {
        if (speedBuilder_ == null) {
          speed_ = builderForValue.build();
          onChanged();
        } else {
          speedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder mergeSpeed(com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed value) {
        if (speedBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              speed_ != com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.getDefaultInstance()) {
            speed_ =
              com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.newBuilder(speed_).mergeFrom(value).buildPartial();
          } else {
            speed_ = value;
          }
          onChanged();
        } else {
          speedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder clearSpeed() {
        if (speedBuilder_ == null) {
          speed_ = com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.getDefaultInstance();
          onChanged();
        } else {
          speedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder getSpeedBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSpeedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder getSpeedOrBuilder() {
        if (speedBuilder_ != null) {
          return speedBuilder_.getMessageOrBuilder();
        } else {
          return speed_;
        }
      }
      /**
       * <code>optional .eaglesakura_ace.RawSpeed speed = 3;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder> 
          getSpeedFieldBuilder() {
        if (speedBuilder_ == null) {
          speedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeed.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.RawSpeedOrBuilder>(
                  speed_,
                  getParentForChildren(),
                  isClean());
          speed_ = null;
        }
        return speedBuilder_;
      }

      // optional .eaglesakura_ace.GeoPoint location = 4;
      private com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint location_ = com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder> locationBuilder_;
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public Builder setLocation(com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public Builder setLocation(
          com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public Builder mergeLocation(com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              location_ != com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.getDefaultInstance()) {
            location_ =
              com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder getLocationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .eaglesakura_ace.GeoPoint location = 4;</code>
       *
       * <pre>
       * GPS座標
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPoint.Builder, com.eaglesakura.andriders.protocol.GeoProtocol.GeoPointOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // required string date = 100;
      private java.lang.Object date_ = "";
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          date_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <code>required string date = 100;</code>
       *
       * <pre>
       * ログの打刻時間
       * </pre>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        date_ = value;
        onChanged();
        return this;
      }

      // required int32 batteryLevel = 101;
      private int batteryLevel_ ;
      /**
       * <code>required int32 batteryLevel = 101;</code>
       *
       * <pre>
       * バッテリーの残量（％）
       * </pre>
       */
      public boolean hasBatteryLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 batteryLevel = 101;</code>
       *
       * <pre>
       * バッテリーの残量（％）
       * </pre>
       */
      public int getBatteryLevel() {
        return batteryLevel_;
      }
      /**
       * <code>required int32 batteryLevel = 101;</code>
       *
       * <pre>
       * バッテリーの残量（％）
       * </pre>
       */
      public Builder setBatteryLevel(int value) {
        bitField0_ |= 0x00000020;
        batteryLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 batteryLevel = 101;</code>
       *
       * <pre>
       * バッテリーの残量（％）
       * </pre>
       */
      public Builder clearBatteryLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        batteryLevel_ = 0;
        onChanged();
        return this;
      }

      // required bool batteryCharging = 102;
      private boolean batteryCharging_ ;
      /**
       * <code>required bool batteryCharging = 102;</code>
       *
       * <pre>
       * 充電中の場合true
       * </pre>
       */
      public boolean hasBatteryCharging() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool batteryCharging = 102;</code>
       *
       * <pre>
       * 充電中の場合true
       * </pre>
       */
      public boolean getBatteryCharging() {
        return batteryCharging_;
      }
      /**
       * <code>required bool batteryCharging = 102;</code>
       *
       * <pre>
       * 充電中の場合true
       * </pre>
       */
      public Builder setBatteryCharging(boolean value) {
        bitField0_ |= 0x00000040;
        batteryCharging_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool batteryCharging = 102;</code>
       *
       * <pre>
       * 充電中の場合true
       * </pre>
       */
      public Builder clearBatteryCharging() {
        bitField0_ = (bitField0_ & ~0x00000040);
        batteryCharging_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.RawSessionPointPayload)
    }

    static {
      defaultInstance = new RawSessionPointPayload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.RawSessionPointPayload)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_RawSessionPointPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024LoggerProtocol.proto\022\017eaglesakura_ace\032" +
      "\023AcesConstants.proto\032\021GeoProtocol.proto\032" +
      "\024SensorProtocol.proto\"\214\002\n\026RawSessionPoin" +
      "tPayload\022,\n\007cadence\030\001 \001(\0132\033.eaglesakura_" +
      "ace.RawCadence\0220\n\theartrate\030\002 \001(\0132\035.eagl" +
      "esakura_ace.RawHeartrate\022(\n\005speed\030\003 \001(\0132" +
      "\031.eaglesakura_ace.RawSpeed\022+\n\010location\030\004" +
      " \001(\0132\031.eaglesakura_ace.GeoPoint\022\014\n\004date\030" +
      "d \002(\t\022\024\n\014batteryLevel\030e \002(\005\022\027\n\017batteryCh" +
      "arging\030f \002(\010B$\n\"com.eaglesakura.andrider",
      "s.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_eaglesakura_ace_RawSessionPointPayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_RawSessionPointPayload_descriptor,
              new java.lang.String[] { "Cadence", "Heartrate", "Speed", "Location", "Date", "BatteryLevel", "BatteryCharging", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.eaglesakura.andriders.protocol.AcesConstants.getDescriptor(),
          com.eaglesakura.andriders.protocol.GeoProtocol.getDescriptor(),
          com.eaglesakura.andriders.protocol.SensorProtocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
