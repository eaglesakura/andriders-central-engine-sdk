// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AcesProtocol.proto

package com.eaglesakura.andriders.protocol;

public final class AcesProtocol {
  private AcesProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VersionInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 protocolVersion = 1;
    /**
     * <code>required int64 protocolVersion = 1;</code>
     *
     * <pre>
     * データフォーマットバージョン
     * 互換性の無いバージョンになったらCentralを更新する必要がある
     * </pre>
     */
    boolean hasProtocolVersion();
    /**
     * <code>required int64 protocolVersion = 1;</code>
     *
     * <pre>
     * データフォーマットバージョン
     * 互換性の無いバージョンになったらCentralを更新する必要がある
     * </pre>
     */
    long getProtocolVersion();

    // required string appVersionName = 2;
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    boolean hasAppVersionName();
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    java.lang.String getAppVersionName();
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    com.google.protobuf.ByteString
        getAppVersionNameBytes();
  }
  /**
   * Protobuf type {@code eaglesakura_ace.VersionInfo}
   *
   * <pre>
   * セントラルサービスのバージョン
   * </pre>
   */
  public static final class VersionInfo extends
      com.google.protobuf.GeneratedMessage
      implements VersionInfoOrBuilder {
    // Use VersionInfo.newBuilder() to construct.
    private VersionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VersionInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VersionInfo defaultInstance;
    public static VersionInfo getDefaultInstance() {
      return defaultInstance;
    }

    public VersionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VersionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              protocolVersion_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              appVersionName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_VersionInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_VersionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.class, com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<VersionInfo> PARSER =
        new com.google.protobuf.AbstractParser<VersionInfo>() {
      public VersionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VersionInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VersionInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 protocolVersion = 1;
    public static final int PROTOCOLVERSION_FIELD_NUMBER = 1;
    private long protocolVersion_;
    /**
     * <code>required int64 protocolVersion = 1;</code>
     *
     * <pre>
     * データフォーマットバージョン
     * 互換性の無いバージョンになったらCentralを更新する必要がある
     * </pre>
     */
    public boolean hasProtocolVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 protocolVersion = 1;</code>
     *
     * <pre>
     * データフォーマットバージョン
     * 互換性の無いバージョンになったらCentralを更新する必要がある
     * </pre>
     */
    public long getProtocolVersion() {
      return protocolVersion_;
    }

    // required string appVersionName = 2;
    public static final int APPVERSIONNAME_FIELD_NUMBER = 2;
    private java.lang.Object appVersionName_;
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    public boolean hasAppVersionName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    public java.lang.String getAppVersionName() {
      java.lang.Object ref = appVersionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appVersionName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string appVersionName = 2;</code>
     *
     * <pre>
     * 実行しているCentralのアプリバージョン名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAppVersionNameBytes() {
      java.lang.Object ref = appVersionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appVersionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      protocolVersion_ = 0L;
      appVersionName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProtocolVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAppVersionName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, protocolVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAppVersionNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, protocolVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAppVersionNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.VersionInfo}
     *
     * <pre>
     * セントラルサービスのバージョン
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_VersionInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_VersionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.class, com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        protocolVersion_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        appVersionName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_VersionInfo_descriptor;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo build() {
        com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo buildPartial() {
        com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo result = new com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocolVersion_ = protocolVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appVersionName_ = appVersionName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo) {
          return mergeFrom((com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo other) {
        if (other == com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo.getDefaultInstance()) return this;
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        if (other.hasAppVersionName()) {
          bitField0_ |= 0x00000002;
          appVersionName_ = other.appVersionName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProtocolVersion()) {
          
          return false;
        }
        if (!hasAppVersionName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.AcesProtocol.VersionInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 protocolVersion = 1;
      private long protocolVersion_ ;
      /**
       * <code>required int64 protocolVersion = 1;</code>
       *
       * <pre>
       * データフォーマットバージョン
       * 互換性の無いバージョンになったらCentralを更新する必要がある
       * </pre>
       */
      public boolean hasProtocolVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 protocolVersion = 1;</code>
       *
       * <pre>
       * データフォーマットバージョン
       * 互換性の無いバージョンになったらCentralを更新する必要がある
       * </pre>
       */
      public long getProtocolVersion() {
        return protocolVersion_;
      }
      /**
       * <code>required int64 protocolVersion = 1;</code>
       *
       * <pre>
       * データフォーマットバージョン
       * 互換性の無いバージョンになったらCentralを更新する必要がある
       * </pre>
       */
      public Builder setProtocolVersion(long value) {
        bitField0_ |= 0x00000001;
        protocolVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 protocolVersion = 1;</code>
       *
       * <pre>
       * データフォーマットバージョン
       * 互換性の無いバージョンになったらCentralを更新する必要がある
       * </pre>
       */
      public Builder clearProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocolVersion_ = 0L;
        onChanged();
        return this;
      }

      // required string appVersionName = 2;
      private java.lang.Object appVersionName_ = "";
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public boolean hasAppVersionName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public java.lang.String getAppVersionName() {
        java.lang.Object ref = appVersionName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          appVersionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAppVersionNameBytes() {
        java.lang.Object ref = appVersionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appVersionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public Builder setAppVersionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appVersionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public Builder clearAppVersionName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appVersionName_ = getDefaultInstance().getAppVersionName();
        onChanged();
        return this;
      }
      /**
       * <code>required string appVersionName = 2;</code>
       *
       * <pre>
       * 実行しているCentralのアプリバージョン名
       * </pre>
       */
      public Builder setAppVersionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appVersionName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.VersionInfo)
    }

    static {
      defaultInstance = new VersionInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.VersionInfo)
  }

  public interface CentralStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bool connectedHeartrate = 1;
    /**
     * <code>required bool connectedHeartrate = 1;</code>
     *
     * <pre>
     * ハートレートモニターに接続されていたらtrue
     * </pre>
     */
    boolean hasConnectedHeartrate();
    /**
     * <code>required bool connectedHeartrate = 1;</code>
     *
     * <pre>
     * ハートレートモニターに接続されていたらtrue
     * </pre>
     */
    boolean getConnectedHeartrate();

    // required bool connectedCadence = 2;
    /**
     * <code>required bool connectedCadence = 2;</code>
     *
     * <pre>
     * ケイデンスセンサーに接続されていたらtrue
     * </pre>
     */
    boolean hasConnectedCadence();
    /**
     * <code>required bool connectedCadence = 2;</code>
     *
     * <pre>
     * ケイデンスセンサーに接続されていたらtrue
     * </pre>
     */
    boolean getConnectedCadence();

    // required bool connectedTwitter = 3;
    /**
     * <code>required bool connectedTwitter = 3;</code>
     *
     * <pre>
     * ツイッター接続済みの場合true
     * </pre>
     */
    boolean hasConnectedTwitter();
    /**
     * <code>required bool connectedTwitter = 3;</code>
     *
     * <pre>
     * ツイッター接続済みの場合true
     * </pre>
     */
    boolean getConnectedTwitter();
  }
  /**
   * Protobuf type {@code eaglesakura_ace.CentralStatus}
   *
   * <pre>
   * セントラルの情報を載せる
   * Serviceを起動している限り、常に付与して送付される
   * </pre>
   */
  public static final class CentralStatus extends
      com.google.protobuf.GeneratedMessage
      implements CentralStatusOrBuilder {
    // Use CentralStatus.newBuilder() to construct.
    private CentralStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CentralStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CentralStatus defaultInstance;
    public static CentralStatus getDefaultInstance() {
      return defaultInstance;
    }

    public CentralStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CentralStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              connectedHeartrate_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              connectedCadence_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              connectedTwitter_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_CentralStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_CentralStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.class, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<CentralStatus> PARSER =
        new com.google.protobuf.AbstractParser<CentralStatus>() {
      public CentralStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CentralStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CentralStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool connectedHeartrate = 1;
    public static final int CONNECTEDHEARTRATE_FIELD_NUMBER = 1;
    private boolean connectedHeartrate_;
    /**
     * <code>required bool connectedHeartrate = 1;</code>
     *
     * <pre>
     * ハートレートモニターに接続されていたらtrue
     * </pre>
     */
    public boolean hasConnectedHeartrate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool connectedHeartrate = 1;</code>
     *
     * <pre>
     * ハートレートモニターに接続されていたらtrue
     * </pre>
     */
    public boolean getConnectedHeartrate() {
      return connectedHeartrate_;
    }

    // required bool connectedCadence = 2;
    public static final int CONNECTEDCADENCE_FIELD_NUMBER = 2;
    private boolean connectedCadence_;
    /**
     * <code>required bool connectedCadence = 2;</code>
     *
     * <pre>
     * ケイデンスセンサーに接続されていたらtrue
     * </pre>
     */
    public boolean hasConnectedCadence() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool connectedCadence = 2;</code>
     *
     * <pre>
     * ケイデンスセンサーに接続されていたらtrue
     * </pre>
     */
    public boolean getConnectedCadence() {
      return connectedCadence_;
    }

    // required bool connectedTwitter = 3;
    public static final int CONNECTEDTWITTER_FIELD_NUMBER = 3;
    private boolean connectedTwitter_;
    /**
     * <code>required bool connectedTwitter = 3;</code>
     *
     * <pre>
     * ツイッター接続済みの場合true
     * </pre>
     */
    public boolean hasConnectedTwitter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool connectedTwitter = 3;</code>
     *
     * <pre>
     * ツイッター接続済みの場合true
     * </pre>
     */
    public boolean getConnectedTwitter() {
      return connectedTwitter_;
    }

    private void initFields() {
      connectedHeartrate_ = false;
      connectedCadence_ = false;
      connectedTwitter_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasConnectedHeartrate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectedCadence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectedTwitter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, connectedHeartrate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, connectedCadence_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, connectedTwitter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, connectedHeartrate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, connectedCadence_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, connectedTwitter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.CentralStatus}
     *
     * <pre>
     * セントラルの情報を載せる
     * Serviceを起動している限り、常に付与して送付される
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_CentralStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_CentralStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.class, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        connectedHeartrate_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        connectedCadence_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        connectedTwitter_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_CentralStatus_descriptor;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus build() {
        com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus buildPartial() {
        com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus result = new com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.connectedHeartrate_ = connectedHeartrate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.connectedCadence_ = connectedCadence_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.connectedTwitter_ = connectedTwitter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus) {
          return mergeFrom((com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus other) {
        if (other == com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance()) return this;
        if (other.hasConnectedHeartrate()) {
          setConnectedHeartrate(other.getConnectedHeartrate());
        }
        if (other.hasConnectedCadence()) {
          setConnectedCadence(other.getConnectedCadence());
        }
        if (other.hasConnectedTwitter()) {
          setConnectedTwitter(other.getConnectedTwitter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasConnectedHeartrate()) {
          
          return false;
        }
        if (!hasConnectedCadence()) {
          
          return false;
        }
        if (!hasConnectedTwitter()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool connectedHeartrate = 1;
      private boolean connectedHeartrate_ ;
      /**
       * <code>required bool connectedHeartrate = 1;</code>
       *
       * <pre>
       * ハートレートモニターに接続されていたらtrue
       * </pre>
       */
      public boolean hasConnectedHeartrate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool connectedHeartrate = 1;</code>
       *
       * <pre>
       * ハートレートモニターに接続されていたらtrue
       * </pre>
       */
      public boolean getConnectedHeartrate() {
        return connectedHeartrate_;
      }
      /**
       * <code>required bool connectedHeartrate = 1;</code>
       *
       * <pre>
       * ハートレートモニターに接続されていたらtrue
       * </pre>
       */
      public Builder setConnectedHeartrate(boolean value) {
        bitField0_ |= 0x00000001;
        connectedHeartrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool connectedHeartrate = 1;</code>
       *
       * <pre>
       * ハートレートモニターに接続されていたらtrue
       * </pre>
       */
      public Builder clearConnectedHeartrate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        connectedHeartrate_ = false;
        onChanged();
        return this;
      }

      // required bool connectedCadence = 2;
      private boolean connectedCadence_ ;
      /**
       * <code>required bool connectedCadence = 2;</code>
       *
       * <pre>
       * ケイデンスセンサーに接続されていたらtrue
       * </pre>
       */
      public boolean hasConnectedCadence() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool connectedCadence = 2;</code>
       *
       * <pre>
       * ケイデンスセンサーに接続されていたらtrue
       * </pre>
       */
      public boolean getConnectedCadence() {
        return connectedCadence_;
      }
      /**
       * <code>required bool connectedCadence = 2;</code>
       *
       * <pre>
       * ケイデンスセンサーに接続されていたらtrue
       * </pre>
       */
      public Builder setConnectedCadence(boolean value) {
        bitField0_ |= 0x00000002;
        connectedCadence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool connectedCadence = 2;</code>
       *
       * <pre>
       * ケイデンスセンサーに接続されていたらtrue
       * </pre>
       */
      public Builder clearConnectedCadence() {
        bitField0_ = (bitField0_ & ~0x00000002);
        connectedCadence_ = false;
        onChanged();
        return this;
      }

      // required bool connectedTwitter = 3;
      private boolean connectedTwitter_ ;
      /**
       * <code>required bool connectedTwitter = 3;</code>
       *
       * <pre>
       * ツイッター接続済みの場合true
       * </pre>
       */
      public boolean hasConnectedTwitter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool connectedTwitter = 3;</code>
       *
       * <pre>
       * ツイッター接続済みの場合true
       * </pre>
       */
      public boolean getConnectedTwitter() {
        return connectedTwitter_;
      }
      /**
       * <code>required bool connectedTwitter = 3;</code>
       *
       * <pre>
       * ツイッター接続済みの場合true
       * </pre>
       */
      public Builder setConnectedTwitter(boolean value) {
        bitField0_ |= 0x00000004;
        connectedTwitter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool connectedTwitter = 3;</code>
       *
       * <pre>
       * ツイッター接続済みの場合true
       * </pre>
       */
      public Builder clearConnectedTwitter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        connectedTwitter_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.CentralStatus)
    }

    static {
      defaultInstance = new CentralStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.CentralStatus)
  }

  public interface MasterPayloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string uniqueId = 4;
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    boolean hasUniqueId();
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    java.lang.String getUniqueId();
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    com.google.protobuf.ByteString
        getUniqueIdBytes();

    // required string createdDate = 3;
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    boolean hasCreatedDate();
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    java.lang.String getCreatedDate();
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatedDateBytes();

    // required .eaglesakura_ace.CentralStatus centralStatus = 1;
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    boolean hasCentralStatus();
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus getCentralStatus();
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder getCentralStatusOrBuilder();

    // repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> 
        getSensorPayloadsList();
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload getSensorPayloads(int index);
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    int getSensorPayloadsCount();
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    java.util.List<? extends com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder> 
        getSensorPayloadsOrBuilderList();
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder getSensorPayloadsOrBuilder(
        int index);

    // repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> 
        getCommandPayloadsList();
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload getCommandPayloads(int index);
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    int getCommandPayloadsCount();
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    java.util.List<? extends com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder> 
        getCommandPayloadsOrBuilderList();
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder getCommandPayloadsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code eaglesakura_ace.MasterPayload}
   *
   * <pre>
   * データ経路を限定することがないように、すべてのペイロードを一本化する
   * </pre>
   */
  public static final class MasterPayload extends
      com.google.protobuf.GeneratedMessage
      implements MasterPayloadOrBuilder {
    // Use MasterPayload.newBuilder() to construct.
    private MasterPayload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MasterPayload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MasterPayload defaultInstance;
    public static MasterPayload getDefaultInstance() {
      return defaultInstance;
    }

    public MasterPayload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MasterPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = centralStatus_.toBuilder();
              }
              centralStatus_ = input.readMessage(com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(centralStatus_);
                centralStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sensorPayloads_ = new java.util.ArrayList<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload>();
                mutable_bitField0_ |= 0x00000008;
              }
              sensorPayloads_.add(input.readMessage(com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              createdDate_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000001;
              uniqueId_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                commandPayloads_ = new java.util.ArrayList<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload>();
                mutable_bitField0_ |= 0x00000010;
              }
              commandPayloads_.add(input.readMessage(com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sensorPayloads_ = java.util.Collections.unmodifiableList(sensorPayloads_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          commandPayloads_ = java.util.Collections.unmodifiableList(commandPayloads_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_MasterPayload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_MasterPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.class, com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.Builder.class);
    }

    public static com.google.protobuf.Parser<MasterPayload> PARSER =
        new com.google.protobuf.AbstractParser<MasterPayload>() {
      public MasterPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterPayload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MasterPayload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string uniqueId = 4;
    public static final int UNIQUEID_FIELD_NUMBER = 4;
    private java.lang.Object uniqueId_;
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    public boolean hasUniqueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    public java.lang.String getUniqueId() {
      java.lang.Object ref = uniqueId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqueId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uniqueId = 4;</code>
     *
     * <pre>
     * ペイロードごとに一意に確定するID
     * UUIDを使用して、お互いのIDを一意に識別出来るようにする
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUniqueIdBytes() {
      java.lang.Object ref = uniqueId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string createdDate = 3;
    public static final int CREATEDDATE_FIELD_NUMBER = 3;
    private java.lang.Object createdDate_;
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    public boolean hasCreatedDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    public java.lang.String getCreatedDate() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createdDate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string createdDate = 3;</code>
     *
     * <pre>
     * ペイロード作成日時
     * "yyyyMMDD-hh:mm:ss.SS"で記述される
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatedDateBytes() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .eaglesakura_ace.CentralStatus centralStatus = 1;
    public static final int CENTRALSTATUS_FIELD_NUMBER = 1;
    private com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus centralStatus_;
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    public boolean hasCentralStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus getCentralStatus() {
      return centralStatus_;
    }
    /**
     * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
     *
     * <pre>
     * セントラルアプリのステータス
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder getCentralStatusOrBuilder() {
      return centralStatus_;
    }

    // repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;
    public static final int SENSORPAYLOADS_FIELD_NUMBER = 2;
    private java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> sensorPayloads_;
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    public java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> getSensorPayloadsList() {
      return sensorPayloads_;
    }
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    public java.util.List<? extends com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder> 
        getSensorPayloadsOrBuilderList() {
      return sensorPayloads_;
    }
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    public int getSensorPayloadsCount() {
      return sensorPayloads_.size();
    }
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload getSensorPayloads(int index) {
      return sensorPayloads_.get(index);
    }
    /**
     * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
     *
     * <pre>
     * センサーの値
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder getSensorPayloadsOrBuilder(
        int index) {
      return sensorPayloads_.get(index);
    }

    // repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;
    public static final int COMMANDPAYLOADS_FIELD_NUMBER = 5;
    private java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> commandPayloads_;
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    public java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> getCommandPayloadsList() {
      return commandPayloads_;
    }
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    public java.util.List<? extends com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder> 
        getCommandPayloadsOrBuilderList() {
      return commandPayloads_;
    }
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    public int getCommandPayloadsCount() {
      return commandPayloads_.size();
    }
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload getCommandPayloads(int index) {
      return commandPayloads_.get(index);
    }
    /**
     * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
     *
     * <pre>
     * 制御コマンド
     * </pre>
     */
    public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder getCommandPayloadsOrBuilder(
        int index) {
      return commandPayloads_.get(index);
    }

    private void initFields() {
      uniqueId_ = "";
      createdDate_ = "";
      centralStatus_ = com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance();
      sensorPayloads_ = java.util.Collections.emptyList();
      commandPayloads_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUniqueId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreatedDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCentralStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCentralStatus().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSensorPayloadsCount(); i++) {
        if (!getSensorPayloads(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCommandPayloadsCount(); i++) {
        if (!getCommandPayloads(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(1, centralStatus_);
      }
      for (int i = 0; i < sensorPayloads_.size(); i++) {
        output.writeMessage(2, sensorPayloads_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getCreatedDateBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(4, getUniqueIdBytes());
      }
      for (int i = 0; i < commandPayloads_.size(); i++) {
        output.writeMessage(5, commandPayloads_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, centralStatus_);
      }
      for (int i = 0; i < sensorPayloads_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sensorPayloads_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCreatedDateBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUniqueIdBytes());
      }
      for (int i = 0; i < commandPayloads_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, commandPayloads_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code eaglesakura_ace.MasterPayload}
     *
     * <pre>
     * データ経路を限定することがないように、すべてのペイロードを一本化する
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_MasterPayload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_MasterPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.class, com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.Builder.class);
      }

      // Construct using com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCentralStatusFieldBuilder();
          getSensorPayloadsFieldBuilder();
          getCommandPayloadsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uniqueId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        createdDate_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (centralStatusBuilder_ == null) {
          centralStatus_ = com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance();
        } else {
          centralStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sensorPayloadsBuilder_ == null) {
          sensorPayloads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sensorPayloadsBuilder_.clear();
        }
        if (commandPayloadsBuilder_ == null) {
          commandPayloads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          commandPayloadsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.internal_static_eaglesakura_ace_MasterPayload_descriptor;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload getDefaultInstanceForType() {
        return com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.getDefaultInstance();
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload build() {
        com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload buildPartial() {
        com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload result = new com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uniqueId_ = uniqueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.createdDate_ = createdDate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (centralStatusBuilder_ == null) {
          result.centralStatus_ = centralStatus_;
        } else {
          result.centralStatus_ = centralStatusBuilder_.build();
        }
        if (sensorPayloadsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sensorPayloads_ = java.util.Collections.unmodifiableList(sensorPayloads_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sensorPayloads_ = sensorPayloads_;
        } else {
          result.sensorPayloads_ = sensorPayloadsBuilder_.build();
        }
        if (commandPayloadsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            commandPayloads_ = java.util.Collections.unmodifiableList(commandPayloads_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.commandPayloads_ = commandPayloads_;
        } else {
          result.commandPayloads_ = commandPayloadsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload) {
          return mergeFrom((com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload other) {
        if (other == com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload.getDefaultInstance()) return this;
        if (other.hasUniqueId()) {
          bitField0_ |= 0x00000001;
          uniqueId_ = other.uniqueId_;
          onChanged();
        }
        if (other.hasCreatedDate()) {
          bitField0_ |= 0x00000002;
          createdDate_ = other.createdDate_;
          onChanged();
        }
        if (other.hasCentralStatus()) {
          mergeCentralStatus(other.getCentralStatus());
        }
        if (sensorPayloadsBuilder_ == null) {
          if (!other.sensorPayloads_.isEmpty()) {
            if (sensorPayloads_.isEmpty()) {
              sensorPayloads_ = other.sensorPayloads_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSensorPayloadsIsMutable();
              sensorPayloads_.addAll(other.sensorPayloads_);
            }
            onChanged();
          }
        } else {
          if (!other.sensorPayloads_.isEmpty()) {
            if (sensorPayloadsBuilder_.isEmpty()) {
              sensorPayloadsBuilder_.dispose();
              sensorPayloadsBuilder_ = null;
              sensorPayloads_ = other.sensorPayloads_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sensorPayloadsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorPayloadsFieldBuilder() : null;
            } else {
              sensorPayloadsBuilder_.addAllMessages(other.sensorPayloads_);
            }
          }
        }
        if (commandPayloadsBuilder_ == null) {
          if (!other.commandPayloads_.isEmpty()) {
            if (commandPayloads_.isEmpty()) {
              commandPayloads_ = other.commandPayloads_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCommandPayloadsIsMutable();
              commandPayloads_.addAll(other.commandPayloads_);
            }
            onChanged();
          }
        } else {
          if (!other.commandPayloads_.isEmpty()) {
            if (commandPayloadsBuilder_.isEmpty()) {
              commandPayloadsBuilder_.dispose();
              commandPayloadsBuilder_ = null;
              commandPayloads_ = other.commandPayloads_;
              bitField0_ = (bitField0_ & ~0x00000010);
              commandPayloadsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCommandPayloadsFieldBuilder() : null;
            } else {
              commandPayloadsBuilder_.addAllMessages(other.commandPayloads_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUniqueId()) {
          
          return false;
        }
        if (!hasCreatedDate()) {
          
          return false;
        }
        if (!hasCentralStatus()) {
          
          return false;
        }
        if (!getCentralStatus().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getSensorPayloadsCount(); i++) {
          if (!getSensorPayloads(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCommandPayloadsCount(); i++) {
          if (!getCommandPayloads(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eaglesakura.andriders.protocol.AcesProtocol.MasterPayload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string uniqueId = 4;
      private java.lang.Object uniqueId_ = "";
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public boolean hasUniqueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public java.lang.String getUniqueId() {
        java.lang.Object ref = uniqueId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqueId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUniqueIdBytes() {
        java.lang.Object ref = uniqueId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public Builder setUniqueId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uniqueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public Builder clearUniqueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uniqueId_ = getDefaultInstance().getUniqueId();
        onChanged();
        return this;
      }
      /**
       * <code>required string uniqueId = 4;</code>
       *
       * <pre>
       * ペイロードごとに一意に確定するID
       * UUIDを使用して、お互いのIDを一意に識別出来るようにする
       * </pre>
       */
      public Builder setUniqueIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uniqueId_ = value;
        onChanged();
        return this;
      }

      // required string createdDate = 3;
      private java.lang.Object createdDate_ = "";
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public boolean hasCreatedDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public java.lang.String getCreatedDate() {
        java.lang.Object ref = createdDate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createdDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatedDateBytes() {
        java.lang.Object ref = createdDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public Builder setCreatedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        createdDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public Builder clearCreatedDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        createdDate_ = getDefaultInstance().getCreatedDate();
        onChanged();
        return this;
      }
      /**
       * <code>required string createdDate = 3;</code>
       *
       * <pre>
       * ペイロード作成日時
       * "yyyyMMDD-hh:mm:ss.SS"で記述される
       * </pre>
       */
      public Builder setCreatedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        createdDate_ = value;
        onChanged();
        return this;
      }

      // required .eaglesakura_ace.CentralStatus centralStatus = 1;
      private com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus centralStatus_ = com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder> centralStatusBuilder_;
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public boolean hasCentralStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus getCentralStatus() {
        if (centralStatusBuilder_ == null) {
          return centralStatus_;
        } else {
          return centralStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public Builder setCentralStatus(com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus value) {
        if (centralStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          centralStatus_ = value;
          onChanged();
        } else {
          centralStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public Builder setCentralStatus(
          com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder builderForValue) {
        if (centralStatusBuilder_ == null) {
          centralStatus_ = builderForValue.build();
          onChanged();
        } else {
          centralStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public Builder mergeCentralStatus(com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus value) {
        if (centralStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              centralStatus_ != com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance()) {
            centralStatus_ =
              com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.newBuilder(centralStatus_).mergeFrom(value).buildPartial();
          } else {
            centralStatus_ = value;
          }
          onChanged();
        } else {
          centralStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public Builder clearCentralStatus() {
        if (centralStatusBuilder_ == null) {
          centralStatus_ = com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.getDefaultInstance();
          onChanged();
        } else {
          centralStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder getCentralStatusBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCentralStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder getCentralStatusOrBuilder() {
        if (centralStatusBuilder_ != null) {
          return centralStatusBuilder_.getMessageOrBuilder();
        } else {
          return centralStatus_;
        }
      }
      /**
       * <code>required .eaglesakura_ace.CentralStatus centralStatus = 1;</code>
       *
       * <pre>
       * セントラルアプリのステータス
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder> 
          getCentralStatusFieldBuilder() {
        if (centralStatusBuilder_ == null) {
          centralStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatus.Builder, com.eaglesakura.andriders.protocol.AcesProtocol.CentralStatusOrBuilder>(
                  centralStatus_,
                  getParentForChildren(),
                  isClean());
          centralStatus_ = null;
        }
        return centralStatusBuilder_;
      }

      // repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;
      private java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> sensorPayloads_ =
        java.util.Collections.emptyList();
      private void ensureSensorPayloadsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sensorPayloads_ = new java.util.ArrayList<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload>(sensorPayloads_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder> sensorPayloadsBuilder_;

      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> getSensorPayloadsList() {
        if (sensorPayloadsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensorPayloads_);
        } else {
          return sensorPayloadsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public int getSensorPayloadsCount() {
        if (sensorPayloadsBuilder_ == null) {
          return sensorPayloads_.size();
        } else {
          return sensorPayloadsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload getSensorPayloads(int index) {
        if (sensorPayloadsBuilder_ == null) {
          return sensorPayloads_.get(index);
        } else {
          return sensorPayloadsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder setSensorPayloads(
          int index, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload value) {
        if (sensorPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.set(index, value);
          onChanged();
        } else {
          sensorPayloadsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder setSensorPayloads(
          int index, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder builderForValue) {
        if (sensorPayloadsBuilder_ == null) {
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorPayloadsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder addSensorPayloads(com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload value) {
        if (sensorPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.add(value);
          onChanged();
        } else {
          sensorPayloadsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder addSensorPayloads(
          int index, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload value) {
        if (sensorPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.add(index, value);
          onChanged();
        } else {
          sensorPayloadsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder addSensorPayloads(
          com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder builderForValue) {
        if (sensorPayloadsBuilder_ == null) {
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.add(builderForValue.build());
          onChanged();
        } else {
          sensorPayloadsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder addSensorPayloads(
          int index, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder builderForValue) {
        if (sensorPayloadsBuilder_ == null) {
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorPayloadsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder addAllSensorPayloads(
          java.lang.Iterable<? extends com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload> values) {
        if (sensorPayloadsBuilder_ == null) {
          ensureSensorPayloadsIsMutable();
          super.addAll(values, sensorPayloads_);
          onChanged();
        } else {
          sensorPayloadsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder clearSensorPayloads() {
        if (sensorPayloadsBuilder_ == null) {
          sensorPayloads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sensorPayloadsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public Builder removeSensorPayloads(int index) {
        if (sensorPayloadsBuilder_ == null) {
          ensureSensorPayloadsIsMutable();
          sensorPayloads_.remove(index);
          onChanged();
        } else {
          sensorPayloadsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder getSensorPayloadsBuilder(
          int index) {
        return getSensorPayloadsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder getSensorPayloadsOrBuilder(
          int index) {
        if (sensorPayloadsBuilder_ == null) {
          return sensorPayloads_.get(index);  } else {
          return sensorPayloadsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public java.util.List<? extends com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder> 
           getSensorPayloadsOrBuilderList() {
        if (sensorPayloadsBuilder_ != null) {
          return sensorPayloadsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensorPayloads_);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder addSensorPayloadsBuilder() {
        return getSensorPayloadsFieldBuilder().addBuilder(
            com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.getDefaultInstance());
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder addSensorPayloadsBuilder(
          int index) {
        return getSensorPayloadsFieldBuilder().addBuilder(
            index, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.getDefaultInstance());
      }
      /**
       * <code>repeated .eaglesakura_ace.SensorPayload sensorPayloads = 2;</code>
       *
       * <pre>
       * センサーの値
       * </pre>
       */
      public java.util.List<com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder> 
           getSensorPayloadsBuilderList() {
        return getSensorPayloadsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder> 
          getSensorPayloadsFieldBuilder() {
        if (sensorPayloadsBuilder_ == null) {
          sensorPayloadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayload.Builder, com.eaglesakura.andriders.protocol.SensorProtocol.SensorPayloadOrBuilder>(
                  sensorPayloads_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sensorPayloads_ = null;
        }
        return sensorPayloadsBuilder_;
      }

      // repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;
      private java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> commandPayloads_ =
        java.util.Collections.emptyList();
      private void ensureCommandPayloadsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          commandPayloads_ = new java.util.ArrayList<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload>(commandPayloads_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder> commandPayloadsBuilder_;

      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> getCommandPayloadsList() {
        if (commandPayloadsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(commandPayloads_);
        } else {
          return commandPayloadsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public int getCommandPayloadsCount() {
        if (commandPayloadsBuilder_ == null) {
          return commandPayloads_.size();
        } else {
          return commandPayloadsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload getCommandPayloads(int index) {
        if (commandPayloadsBuilder_ == null) {
          return commandPayloads_.get(index);
        } else {
          return commandPayloadsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder setCommandPayloads(
          int index, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload value) {
        if (commandPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandPayloadsIsMutable();
          commandPayloads_.set(index, value);
          onChanged();
        } else {
          commandPayloadsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder setCommandPayloads(
          int index, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder builderForValue) {
        if (commandPayloadsBuilder_ == null) {
          ensureCommandPayloadsIsMutable();
          commandPayloads_.set(index, builderForValue.build());
          onChanged();
        } else {
          commandPayloadsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder addCommandPayloads(com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload value) {
        if (commandPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandPayloadsIsMutable();
          commandPayloads_.add(value);
          onChanged();
        } else {
          commandPayloadsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder addCommandPayloads(
          int index, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload value) {
        if (commandPayloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandPayloadsIsMutable();
          commandPayloads_.add(index, value);
          onChanged();
        } else {
          commandPayloadsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder addCommandPayloads(
          com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder builderForValue) {
        if (commandPayloadsBuilder_ == null) {
          ensureCommandPayloadsIsMutable();
          commandPayloads_.add(builderForValue.build());
          onChanged();
        } else {
          commandPayloadsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder addCommandPayloads(
          int index, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder builderForValue) {
        if (commandPayloadsBuilder_ == null) {
          ensureCommandPayloadsIsMutable();
          commandPayloads_.add(index, builderForValue.build());
          onChanged();
        } else {
          commandPayloadsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder addAllCommandPayloads(
          java.lang.Iterable<? extends com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload> values) {
        if (commandPayloadsBuilder_ == null) {
          ensureCommandPayloadsIsMutable();
          super.addAll(values, commandPayloads_);
          onChanged();
        } else {
          commandPayloadsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder clearCommandPayloads() {
        if (commandPayloadsBuilder_ == null) {
          commandPayloads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          commandPayloadsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public Builder removeCommandPayloads(int index) {
        if (commandPayloadsBuilder_ == null) {
          ensureCommandPayloadsIsMutable();
          commandPayloads_.remove(index);
          onChanged();
        } else {
          commandPayloadsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder getCommandPayloadsBuilder(
          int index) {
        return getCommandPayloadsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder getCommandPayloadsOrBuilder(
          int index) {
        if (commandPayloadsBuilder_ == null) {
          return commandPayloads_.get(index);  } else {
          return commandPayloadsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public java.util.List<? extends com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder> 
           getCommandPayloadsOrBuilderList() {
        if (commandPayloadsBuilder_ != null) {
          return commandPayloadsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(commandPayloads_);
        }
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder addCommandPayloadsBuilder() {
        return getCommandPayloadsFieldBuilder().addBuilder(
            com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.getDefaultInstance());
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder addCommandPayloadsBuilder(
          int index) {
        return getCommandPayloadsFieldBuilder().addBuilder(
            index, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.getDefaultInstance());
      }
      /**
       * <code>repeated .eaglesakura_ace.CommandPayload commandPayloads = 5;</code>
       *
       * <pre>
       * 制御コマンド
       * </pre>
       */
      public java.util.List<com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder> 
           getCommandPayloadsBuilderList() {
        return getCommandPayloadsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder> 
          getCommandPayloadsFieldBuilder() {
        if (commandPayloadsBuilder_ == null) {
          commandPayloadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayload.Builder, com.eaglesakura.andriders.protocol.CommandProtocol.CommandPayloadOrBuilder>(
                  commandPayloads_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          commandPayloads_ = null;
        }
        return commandPayloadsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:eaglesakura_ace.MasterPayload)
    }

    static {
      defaultInstance = new MasterPayload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:eaglesakura_ace.MasterPayload)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_VersionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_VersionInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_CentralStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_CentralStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_eaglesakura_ace_MasterPayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_eaglesakura_ace_MasterPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022AcesProtocol.proto\022\017eaglesakura_ace\032\022A" +
      "ceConstants.proto\032\024SensorProtocol.proto\032" +
      "\025CommandProtocol.proto\">\n\013VersionInfo\022\027\n" +
      "\017protocolVersion\030\001 \002(\003\022\026\n\016appVersionName" +
      "\030\002 \002(\t\"_\n\rCentralStatus\022\032\n\022connectedHear" +
      "trate\030\001 \002(\010\022\030\n\020connectedCadence\030\002 \002(\010\022\030\n" +
      "\020connectedTwitter\030\003 \002(\010\"\337\001\n\rMasterPayloa" +
      "d\022\020\n\010uniqueId\030\004 \002(\t\022\023\n\013createdDate\030\003 \002(\t" +
      "\0225\n\rcentralStatus\030\001 \002(\0132\036.eaglesakura_ac" +
      "e.CentralStatus\0226\n\016sensorPayloads\030\002 \003(\0132",
      "\036.eaglesakura_ace.SensorPayload\0228\n\017comma" +
      "ndPayloads\030\005 \003(\0132\037.eaglesakura_ace.Comma" +
      "ndPayloadB$\n\"com.eaglesakura.andriders.p" +
      "rotocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_eaglesakura_ace_VersionInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_eaglesakura_ace_VersionInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_VersionInfo_descriptor,
              new java.lang.String[] { "ProtocolVersion", "AppVersionName", });
          internal_static_eaglesakura_ace_CentralStatus_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_eaglesakura_ace_CentralStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_CentralStatus_descriptor,
              new java.lang.String[] { "ConnectedHeartrate", "ConnectedCadence", "ConnectedTwitter", });
          internal_static_eaglesakura_ace_MasterPayload_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_eaglesakura_ace_MasterPayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_eaglesakura_ace_MasterPayload_descriptor,
              new java.lang.String[] { "UniqueId", "CreatedDate", "CentralStatus", "SensorPayloads", "CommandPayloads", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.eaglesakura.andriders.protocol.AceConstants.getDescriptor(),
          com.eaglesakura.andriders.protocol.SensorProtocol.getDescriptor(),
          com.eaglesakura.andriders.protocol.CommandProtocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
