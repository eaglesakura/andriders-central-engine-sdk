package eaglesakura_ace;

import "AceConstants.proto";
option java_package = "com.eaglesakura.andriders.protocol";

// センサーの種類
enum SensorType {
// ハートレートモニター
	HeartrateMonitor = 0;
	// ケイデンスセンサー
	CadenceSensor = 1;
	// スピードセンサー
	SpeedSensor = 2;
}

// ケイデンス連携データ
message RawCadence {
// 回転数
	required int32 rpm = 100;
	enum CadenceZone {
	// イージー
		Easy = 0;
		// 初心者 90-100
		Beginner = 1;
		// 理想値
		// 100 over
		Ideal = 2;
	};

	// ケイデンスゾーン
	required CadenceZone cadenceZone = 101;
}

// 心拍連携データ
message RawHeartrate {
// 心拍数
	required int32 bpm = 100;
	enum HeartrateZone {
	// 安静
		Repose = 0;
		// イージー
		Easy = 1;
		// 脂肪燃焼
		FatCombustion = 2;
		// 有酸素運動
		PossessionOxygenMotion = 3;
		// 無酸素運動
		NonOxygenatedMotion = 4;
		// オーバーワーク
		Overwork = 5;
	}

	// 心拍ゾーン
	// 運動レベルのチェックをするが、個人差が大きいため設定値が必要
	// UIでユーザー設定値を入力する必要がある
	required HeartrateZone heartrateZone = 101;
}

// スピード連携データ
message RawSpeed {
// スピード km/h
	required float speedKmPerHour = 1;

	// ホイールの回転数
	// S&Cセンサーを使用した場合は取得できるが、GPS由来は取得できないためoptional
	optional float wheelRpm = 2;

	// 今までの最高速度
	required float maxKmPerHour = 10;

	// 速度ゾーン
	enum SpeedZone {
	// 停止領域
		Stop = 0;
		// 低速
		Slow = 1;
		// 巡航
		Cruise = 2;
		// スプリント
		Sprint = 3;
	}

	// 速度ゾーン
	required SpeedZone speedZone = 101;
}

// センサー情報のペイロード
message SensorPayload {
// センサーの種類
	required SensorType type = 2;

	// データ本体
	// 実際のデータは各種Rawデータに従う
	required bytes buffer = 10;
}
