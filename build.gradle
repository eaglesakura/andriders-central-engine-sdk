// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
//        jcenter()
        maven {
            url "http://eaglesakura.github.io/maven/"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath "com.eaglesakura:eglibrary-gradle-plugin:0.1.21"
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "http://eaglesakura.github.io/maven/"
        }
    }
}

apply plugin: 'com.android.library'

// 0.4.2 : 獲得標高と傾斜に対応
// 0.4.3 : javadoc整理
def ACES_SDK_VERSION = "0.4.3";
def EGLIBRARY_ARTIFACT_VERSION = "0.2.0";
def PROTOBUF_ARTIFACT_VERSION = "2.6.0";

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.google.protobuf:protobuf-java:${PROTOBUF_ARTIFACT_VERSION}"
    compile 'com.android.support:support-annotations:+'

    compile project(':eglibrary-android-java-core')
    compile project(':eglibrary-java-wrapper')
    compile project(':eglibrary-java-geo')
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22

        // SDK VERSION
        buildConfigField "String", "ACE_SDK_VERSION", "\"${ACES_SDK_VERSION}\""
        buildConfigField "int", "ACE_PROTOCOL_VERSION", "1";
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/generated/protobuf', 'src/main/java']
        }
    }
}

/**
 * Protocol Buffersファイルをビルドする
 */
task compileProtobuf(type: com.eaglesakura.gradle.tasks.ProtobufCompileTask) {
    src = file("src/main/protobuf")
    javaOutput = file("src/main/generated/protobuf")
}

task uploadSdkArchives << {
    tasks.uploadArchives.execute();
}

apply plugin: 'maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "Andriders Central Engine SDK / ver ${ACES_SDK_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar) + files("build/intermediates/classes/${variant.name}/")
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(new File("${System.env.MAVEN_LOCAL_REPO}")))
            pom.version = ACES_SDK_VERSION
            pom.groupId = "com.eaglesakura"
            pom.artifactId = "andriders-central-engine-sdk"
        }
    }
}

task rsyncJavadoc << {
    def src = file("build/docs/javadoc/");
    def dst = file("${System.env.MAVEN_LOCAL_REPO}/doc/ace-sdk/")
    dst.deleteDir();
    dst.mkdirs();

    ["/usr/bin/rsync", "-a", src.absolutePath, dst.absolutePath].execute().text;
}

[uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
    pom.project {
        inceptionYear '2015'
        packaging 'aar'
        licenses {
            license {
                name 'NYSL'
                url 'https://raw.github.com/eaglesakura/eglibrary/master/LICENSE'
            }
        }

        dependencies {
            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-java-wrapper'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }
            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-android-java-core'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }
            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-java-geo'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }
            dependency {
                groupId = 'com.google.protobuf'
                artifactId = 'protobuf-java'
                version = PROTOBUF_ARTIFACT_VERSION
                scope = 'compile'
            }
        }
    }
}

